//
//  HomeInteractor.swift
//  Car_Clean_Swift
//
//  Created by Alvaro Vinicius do Nascimento Fernandes on 12/12/19.
//  Copyright (c) 2019 Alvaro Vinicius do Nascimento Fernandes. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//
// This tag below is used to create the testable files from the Cuckoo pod
// CUCKOO_TESTABLE

import UIKit

protocol HomeBusinessLogic {
    func load(car: Home.Car)
    func cellForRow(at index: Int) -> Home.CarModels.Carro?
    func getTypeCar(_ number: Int) -> Home.Car
    
    var numberOfRows: Int { get }
}

protocol HomeDataStore {
}

class HomeInteractor: HomeBusinessLogic, HomeDataStore {

    var presenter: HomePresentationLogic?
    var worker: HomeWorker
    var response: Home.CarModels.Response?

    init(worker: HomeWorker = HomeWorker()) {
        self.worker = worker
    }
    
    func getTypeCar(_ number: Int) -> Home.Car {
        switch number {
        case 0:
            return Home.Car.luxo
        case 1:
            return Home.Car.classicos
        case 2:
            return Home.Car.esportivos
        default:
            return Home.Car.luxo
        }
    }
    
    func load(car: Home.Car) {
        worker.getCarList(car: car).done(handleSuccess).catch(handleFailure)
    }
    
    func handleSuccess(_ response: Home.CarModels.Response) {
        self.response = response
        presenter?.reloadCollection()
    }
    
    func handleFailure(_ error: Error) {
        presenter?.presentRequestFailureAlert()
    }
    
    var numberOfRows: Int {
        return response?.carros?.carro?.count ?? 0
    }
    
    func cellForRow(at index: Int) -> Home.CarModels.Carro? {
        return response?.carros?.carro?[index]
    }

}
